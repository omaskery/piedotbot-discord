name: Container (Build & Test)
run-name: Build & Test triggered by @{{ github.actor }}

on:
  workflow_call:
    inputs:
      registry:
        description: The container registry to push to
        required: true
        type: string
      registry_namespace:
        description: The container registry namespace to push to
        required: true
        type: string
      image_name:
        description: The name of the container image to use
        required: true
        type: string
      push:
        description: Whether to push the built image
        required: true
        type: boolean

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up Docker
        uses: docker/setup-docker-action@b60f85385d03ac8acfca6d9996982511d8620a19
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ inputs.registry }}/${{ inputs.registry_namespace }}/${{ inputs.image_name }}
          tags: |
            # set latest tag for main branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # always tag with the git commit hash
            type=sha,format=long,prefix=,enable=true
            # when pushing git tags that match vX.Y.Z
            type=semver,pattern={{raw}}

      - name: Log into GitHub Container Registry
        if: ${{ inputs.push }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        if: ${{ inputs.push }}
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be
        with:
          subject-name: ${{ inputs.registry }}/${{ inputs.registry_namespace }}/${{ inputs.image_name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
